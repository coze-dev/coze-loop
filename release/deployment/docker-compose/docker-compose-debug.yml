services:
  app:
    build:
      context: ../../..
      dockerfile: ./release/image/debug.Dockerfile
    image: "coze-dev/coze-loop:debug"
    ports:
      - "${COZE_LOOP_APP_DEBUG_PORT}:40000"
    entrypoint:
      - sh
      - -c
      - |
        exec 2>&1
        set -e

        print_banner() {
          msg="$$1"
          side=30
          content=" $$msg "
          content_len=$${#content}
          line_len=$$((side * 2 + content_len))

          line=$$(printf '*%.0s' $$(seq 1 "$$line_len"))
          side_eq=$$(printf '*%.0s' $$(seq 1 "$$side"))

          printf "%s\n%s%s%s\n%s\n" "$$line" "$$side_eq" "$$content" "$$side_eq" "$$line"
        }

        print_banner "Starting..."

        export ROCKETMQ_GO_LOG_LEVEL=error

        print_banner "Starting Go Remote Debug Server..."
        echo "调试服务将在端口40000上监听"
        echo "IDE连接地址: localhost:40000"
        
        # 不等待healthcheck，直接启动调试器
        # 因为healthcheck检查的是8888端口，但调试模式下我们使用40000端口
        
        exec dlv exec /coze-loop/bin/main \
          --headless \
          --listen=0.0.0.0:40000 \
          --api-version=2 \
          --accept-multiclient \
          --log