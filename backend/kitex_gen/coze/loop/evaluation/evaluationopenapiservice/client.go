// Code generated by Kitex v0.13.1. DO NOT EDIT.

package evaluationopenapiservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	openapi "github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/openapi"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	CreateEvaluationSet(ctx context.Context, req *openapi.CreateEvaluationSetOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateEvaluationSetOpenAPIResponse, err error)
	GetEvaluationSet(ctx context.Context, req *openapi.GetEvaluationSetOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetEvaluationSetOpenAPIResponse, err error)
	ListEvaluationSets(ctx context.Context, req *openapi.ListEvaluationSetsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.ListEvaluationSetsOpenAPIResponse, err error)
	CreateEvaluationSetVersion(ctx context.Context, req *openapi.CreateEvaluationSetVersionOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateEvaluationSetVersionOpenAPIResponse, err error)
	BatchCreateEvaluationSetItems(ctx context.Context, req *openapi.BatchCreateEvaluationSetItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.BatchCreateEvaluationSetItemsOpenAPIResponse, err error)
	BatchUpdateEvaluationSetItems(ctx context.Context, req *openapi.BatchUpdateEvaluationSetItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.BatchUpdateEvaluationSetItemsOpenAPIResponse, err error)
	BatchDeleteEvaluationSetItems(ctx context.Context, req *openapi.BatchDeleteEvaluationSetItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.BatchDeleteEvaluationSetItemsOpenAPIResponse, err error)
	ClearEvaluationSetDraftItems(ctx context.Context, req *openapi.ClearEvaluationSetDraftItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.ClearEvaluationSetDraftItemsOpenAPIResponse, err error)
	ListEvaluationSetVersionItems(ctx context.Context, req *openapi.ListEvaluationSetVersionItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.ListEvaluationSetVersionItemsOpenAPIResponse, err error)
	CreateEvaluator(ctx context.Context, req *openapi.CreateEvaluatorOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateEvaluatorOpenAPIResponse, err error)
	SubmitEvaluatorVersion(ctx context.Context, req *openapi.SubmitEvaluatorVersionOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.SubmitEvaluatorVersionOpenAPIResponse, err error)
	GetEvaluatorVersion(ctx context.Context, req *openapi.GetEvaluatorVersionOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetEvaluatorVersionOpenAPIResponse, err error)
	RunEvaluator(ctx context.Context, req *openapi.RunEvaluatorOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.RunEvaluatorOpenAPIResponse, err error)
	GetEvaluatorRecord(ctx context.Context, req *openapi.GetEvaluatorRecordOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetEvaluatorRecordOpenAPIResponse, err error)
	CreateExperiment(ctx context.Context, req *openapi.CreateExperimentOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateExperimentOpenAPIResponse, err error)
	GetExperimentResult_(ctx context.Context, req *openapi.GetExperimentResultOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetExperimentResultOpenAPIResponse, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kEvaluationOpenAPIServiceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kEvaluationOpenAPIServiceClient struct {
	*kClient
}

func (p *kEvaluationOpenAPIServiceClient) CreateEvaluationSet(ctx context.Context, req *openapi.CreateEvaluationSetOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateEvaluationSetOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateEvaluationSet(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) GetEvaluationSet(ctx context.Context, req *openapi.GetEvaluationSetOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetEvaluationSetOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetEvaluationSet(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) ListEvaluationSets(ctx context.Context, req *openapi.ListEvaluationSetsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.ListEvaluationSetsOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListEvaluationSets(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) CreateEvaluationSetVersion(ctx context.Context, req *openapi.CreateEvaluationSetVersionOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateEvaluationSetVersionOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateEvaluationSetVersion(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) BatchCreateEvaluationSetItems(ctx context.Context, req *openapi.BatchCreateEvaluationSetItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.BatchCreateEvaluationSetItemsOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BatchCreateEvaluationSetItems(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) BatchUpdateEvaluationSetItems(ctx context.Context, req *openapi.BatchUpdateEvaluationSetItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.BatchUpdateEvaluationSetItemsOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BatchUpdateEvaluationSetItems(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) BatchDeleteEvaluationSetItems(ctx context.Context, req *openapi.BatchDeleteEvaluationSetItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.BatchDeleteEvaluationSetItemsOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BatchDeleteEvaluationSetItems(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) ClearEvaluationSetDraftItems(ctx context.Context, req *openapi.ClearEvaluationSetDraftItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.ClearEvaluationSetDraftItemsOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ClearEvaluationSetDraftItems(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) ListEvaluationSetVersionItems(ctx context.Context, req *openapi.ListEvaluationSetVersionItemsOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.ListEvaluationSetVersionItemsOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ListEvaluationSetVersionItems(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) CreateEvaluator(ctx context.Context, req *openapi.CreateEvaluatorOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateEvaluatorOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateEvaluator(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) SubmitEvaluatorVersion(ctx context.Context, req *openapi.SubmitEvaluatorVersionOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.SubmitEvaluatorVersionOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SubmitEvaluatorVersion(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) GetEvaluatorVersion(ctx context.Context, req *openapi.GetEvaluatorVersionOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetEvaluatorVersionOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetEvaluatorVersion(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) RunEvaluator(ctx context.Context, req *openapi.RunEvaluatorOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.RunEvaluatorOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.RunEvaluator(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) GetEvaluatorRecord(ctx context.Context, req *openapi.GetEvaluatorRecordOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetEvaluatorRecordOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetEvaluatorRecord(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) CreateExperiment(ctx context.Context, req *openapi.CreateExperimentOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.CreateExperimentOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateExperiment(ctx, req)
}

func (p *kEvaluationOpenAPIServiceClient) GetExperimentResult_(ctx context.Context, req *openapi.GetExperimentResultOpenAPIRequest, callOptions ...callopt.Option) (r *openapi.GetExperimentResultOpenAPIResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetExperimentResult_(ctx, req)
}
