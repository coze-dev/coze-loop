// Code generated by hertz generator.

package apis

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	openapi0 "github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/openapi"
)

// CreateEvaluationSetOApi .
// @router /open-apis/evaluation/v1/evaluation_sets [POST]
func CreateEvaluationSetOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.CreateEvaluationSetOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.CreateEvaluationSetOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetEvaluationSetOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/:evaluation_set_id [GET]
func GetEvaluationSetOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.GetEvaluationSetOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.GetEvaluationSetOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// ListEvaluationSetsOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/list [POST]
func ListEvaluationSetsOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.ListEvaluationSetsOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.ListEvaluationSetsOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// CreateEvaluationSetVersionOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/:evaluation_set_id/versions [POST]
func CreateEvaluationSetVersionOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.CreateEvaluationSetVersionOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.CreateEvaluationSetVersionOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// BatchCreateEvaluationSetItemsOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/:evaluation_set_id/items/batch_create [POST]
func BatchCreateEvaluationSetItemsOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.BatchCreateEvaluationSetItemsOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.BatchCreateEvaluationSetItemsOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// BatchUpdateEvaluationSetItemsOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/:evaluation_set_id/items/batch_update [POST]
func BatchUpdateEvaluationSetItemsOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.BatchUpdateEvaluationSetItemsOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.BatchUpdateEvaluationSetItemsOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// BatchDeleteEvaluationSetItemsOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/:evaluation_set_id/items/batch_delete [POST]
func BatchDeleteEvaluationSetItemsOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.BatchDeleteEvaluationSetItemsOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.BatchDeleteEvaluationSetItemsOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// ListEvaluationSetVersionItemsOApi .
// @router /open-apis/evaluation/v1/evaluation_sets/:evaluation_set_id/items/list [POST]
func ListEvaluationSetVersionItemsOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.ListEvaluationSetVersionItemsOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.ListEvaluationSetVersionItemsOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateEvaluationSetSchemaOApi .
// @router /v1/loop/evaluation/evaluation_sets/:evaluation_set_id/schema [PUT]
func UpdateEvaluationSetSchemaOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.UpdateEvaluationSetSchemaOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.UpdateEvaluationSetSchemaOApiResponse)

	c.JSON(consts.StatusOK, resp)
}

// ListEvaluationSetVersionsOApi .
// @router /v1/loop/evaluation/evaluation_sets/:evaluation_set_id/versions [GET]
func ListEvaluationSetVersionsOApi(ctx context.Context, c *app.RequestContext) {
	var err error
	var req openapi0.ListEvaluationSetVersionsOApiRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(openapi0.ListEvaluationSetVersionsOApiResponse)

	c.JSON(consts.StatusOK, resp)
}
