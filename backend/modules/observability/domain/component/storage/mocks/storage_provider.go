// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/observability/domain/component/storage (interfaces: IStorageProvider)
//
// Generated by this command:
//
//	mockgen -destination=mocks/storage_provider.go -package=mocks . IStorageProvider
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIStorageProvider is a mock of IStorageProvider interface.
type MockIStorageProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIStorageProviderMockRecorder
	isgomock struct{}
}

// MockIStorageProviderMockRecorder is the mock recorder for MockIStorageProvider.
type MockIStorageProviderMockRecorder struct {
	mock *MockIStorageProvider
}

// NewMockIStorageProvider creates a new mock instance.
func NewMockIStorageProvider(ctrl *gomock.Controller) *MockIStorageProvider {
	mock := &MockIStorageProvider{ctrl: ctrl}
	mock.recorder = &MockIStorageProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStorageProvider) EXPECT() *MockIStorageProviderMockRecorder {
	return m.recorder
}

// GetTraceStorage mocks base method.
func (m *MockIStorageProvider) GetTraceStorage(ctx context.Context, WorkSpaceID string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTraceStorage", ctx, WorkSpaceID)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTraceStorage indicates an expected call of GetTraceStorage.
func (mr *MockIStorageProviderMockRecorder) GetTraceStorage(ctx, WorkSpaceID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTraceStorage", reflect.TypeOf((*MockIStorageProvider)(nil).GetTraceStorage), ctx, WorkSpaceID)
}
