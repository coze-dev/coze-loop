// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/evaluation/domain/component/metrics (interfaces: EvaluationSetMetrics)
//
// Generated by this command:
//
//	mockgen -destination=mocks/evaluation_set.go -package=mocks . EvaluationSetMetrics
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockEvaluationSetMetrics is a mock of EvaluationSetMetrics interface.
type MockEvaluationSetMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockEvaluationSetMetricsMockRecorder
	isgomock struct{}
}

// MockEvaluationSetMetricsMockRecorder is the mock recorder for MockEvaluationSetMetrics.
type MockEvaluationSetMetricsMockRecorder struct {
	mock *MockEvaluationSetMetrics
}

// NewMockEvaluationSetMetrics creates a new mock instance.
func NewMockEvaluationSetMetrics(ctrl *gomock.Controller) *MockEvaluationSetMetrics {
	mock := &MockEvaluationSetMetrics{ctrl: ctrl}
	mock.recorder = &MockEvaluationSetMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEvaluationSetMetrics) EXPECT() *MockEvaluationSetMetricsMockRecorder {
	return m.recorder
}

// EmitCreate mocks base method.
func (m *MockEvaluationSetMetrics) EmitCreate(spaceID int64, err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "EmitCreate", spaceID, err)
}

// EmitCreate indicates an expected call of EmitCreate.
func (mr *MockEvaluationSetMetricsMockRecorder) EmitCreate(spaceID, err any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmitCreate", reflect.TypeOf((*MockEvaluationSetMetrics)(nil).EmitCreate), spaceID, err)
}
