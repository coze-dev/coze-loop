// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/evaluation/domain/service (interfaces: EvaluationSetVersionService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/coze-dev/coze-loop/backend/modules/evaluation/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockEvaluationSetVersionService is a mock of EvaluationSetVersionService interface.
type MockEvaluationSetVersionService struct {
	ctrl     *gomock.Controller
	recorder *MockEvaluationSetVersionServiceMockRecorder
}

// MockEvaluationSetVersionServiceMockRecorder is the mock recorder for MockEvaluationSetVersionService.
type MockEvaluationSetVersionServiceMockRecorder struct {
	mock *MockEvaluationSetVersionService
}

// NewMockEvaluationSetVersionService creates a new mock instance.
func NewMockEvaluationSetVersionService(ctrl *gomock.Controller) *MockEvaluationSetVersionService {
	mock := &MockEvaluationSetVersionService{ctrl: ctrl}
	mock.recorder = &MockEvaluationSetVersionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEvaluationSetVersionService) EXPECT() *MockEvaluationSetVersionServiceMockRecorder {
	return m.recorder
}

// BatchGetEvaluationSetVersions mocks base method.
func (m *MockEvaluationSetVersionService) BatchGetEvaluationSetVersions(arg0 context.Context, arg1 *int64, arg2 []int64, arg3 *bool) ([]*entity.BatchGetEvaluationSetVersionsResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchGetEvaluationSetVersions", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]*entity.BatchGetEvaluationSetVersionsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchGetEvaluationSetVersions indicates an expected call of BatchGetEvaluationSetVersions.
func (mr *MockEvaluationSetVersionServiceMockRecorder) BatchGetEvaluationSetVersions(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchGetEvaluationSetVersions", reflect.TypeOf((*MockEvaluationSetVersionService)(nil).BatchGetEvaluationSetVersions), arg0, arg1, arg2, arg3)
}

// CreateEvaluationSetVersion mocks base method.
func (m *MockEvaluationSetVersionService) CreateEvaluationSetVersion(arg0 context.Context, arg1 *entity.CreateEvaluationSetVersionParam) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEvaluationSetVersion", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEvaluationSetVersion indicates an expected call of CreateEvaluationSetVersion.
func (mr *MockEvaluationSetVersionServiceMockRecorder) CreateEvaluationSetVersion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEvaluationSetVersion", reflect.TypeOf((*MockEvaluationSetVersionService)(nil).CreateEvaluationSetVersion), arg0, arg1)
}

// GetEvaluationSetVersion mocks base method.
func (m *MockEvaluationSetVersionService) GetEvaluationSetVersion(arg0 context.Context, arg1, arg2 int64, arg3 *bool) (*entity.EvaluationSetVersion, *entity.EvaluationSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEvaluationSetVersion", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*entity.EvaluationSetVersion)
	ret1, _ := ret[1].(*entity.EvaluationSet)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEvaluationSetVersion indicates an expected call of GetEvaluationSetVersion.
func (mr *MockEvaluationSetVersionServiceMockRecorder) GetEvaluationSetVersion(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEvaluationSetVersion", reflect.TypeOf((*MockEvaluationSetVersionService)(nil).GetEvaluationSetVersion), arg0, arg1, arg2, arg3)
}

// ListEvaluationSetVersions mocks base method.
func (m *MockEvaluationSetVersionService) ListEvaluationSetVersions(arg0 context.Context, arg1 *entity.ListEvaluationSetVersionsParam) ([]*entity.EvaluationSetVersion, *int64, *string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEvaluationSetVersions", arg0, arg1)
	ret0, _ := ret[0].([]*entity.EvaluationSetVersion)
	ret1, _ := ret[1].(*int64)
	ret2, _ := ret[2].(*string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// ListEvaluationSetVersions indicates an expected call of ListEvaluationSetVersions.
func (mr *MockEvaluationSetVersionServiceMockRecorder) ListEvaluationSetVersions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEvaluationSetVersions", reflect.TypeOf((*MockEvaluationSetVersionService)(nil).ListEvaluationSetVersions), arg0, arg1)
}
